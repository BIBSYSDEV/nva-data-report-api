AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for NVA data report API

Parameters:
  # TODO: Determine access to API
  CognitoAuthorizerArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: Reference to Cognito UserPool for the stage
    Default: CognitoAuthorizerArn
  ExternalCognitoAuthorizerArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: Reference to ARN of ExternalUsers UserPool
    Default: ExternalCognitoAuthorizerArn
  CognitoAuthorizationUri:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/NVA/CognitoUri'
  ProjectName:
    Type: String
    Default: nva-data-report
  ApiDomain:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: The Api domain
    Default: /NVA/ApiDomain
  DataWarehouseDataBricksArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: AWS Account ID of the data warehouse account
    Default: /NVA/IAM/DataWarehouse/DataBricksArn
  DataWarehouseExternalId:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: External ID to assume DataWarehouseRole
    Default: /NVA/IAM/DataWarehouse/ExternalId
  Suffix:
    Type: String
    Default: ''
    Description: Suffix used for naming resources for feature branches to avoid conflicts.
  ResourcesBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /NVA/Events/PersistedEntriesBucketName
  ResourcesPrefix:
    Type: String
    Description: Prefix for resource files in persisted-resources bucket
    Default: resources/
  NviCandidatesPrefix:
    Type: String
    Description: Prefix for nvi-candidate files in persisted-resources bucket
    Default: nvi-candidates/
  LoaderBucketName:
    Type: 'String'
    Default: "loader-input-files"
    Description: Name of bucket for input NQuads files
  KeyBatchesBucketName:
    Type: 'String'
    Default: "data-report-key-batches"
    Description: Name of bucket for key batch files
  ExportBucketName:
    Type: 'String'
    Default: "data-report-csv-export"
    Description: Name of bucket for csv export files
  AllowedOrigins:
    Type: String
    Description: comma separated list of external clients that are allowed to contact the HTTP APIs, "*" indicates that all origins are allowed
    Default: '*'

Conditions:
  WithSuffix: !Not [ !Equals [ !Ref Suffix, '' ] ]

Globals:
  Function:
    Runtime: java21
    MemorySize: 1536
    Environment:
      Variables:
        API_HOST: !Ref ApiDomain

Resources:
  # ---- SQS ----
  TransformPersistedResourceQueue:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TransformPersistedResourceDLQ.Arn
        maxReceiveCount: 5
      # ---- DLQs ----
  DataReportPersistedResourceDLQ:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 #14 days
  TransformPersistedResourceDLQ:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 #14 days

  # ---- Logging ----

  PersistedResourceCsvTransformerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${PersistedResourceCsvTransformer}'
      RetentionInDays: 5

  # ---- Policies ----

  DeleteS3ObjectPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 's3:DeleteObject'
            Resource:
              - !GetAtt KeyBatchesBucket.Arn

  S3ManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
              - s3:PutObject
              - events:*
            Resource: '*'

  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PersistedResourceCsvTransformer.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt PersistedResourcesEventRule.Arn

  #============================= Roles ==========================================================

  DataWarehouseRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Provides external access when paired with known external account and id
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref DataWarehouseDataBricksArn
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref DataWarehouseExternalId
      Policies:
        - PolicyName: S3ExportPolicy
          PolicyDocument:
            Version: \'2012-10-17\'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:GetBucketLocation
                Resource:
                  - !Sub \'${ExportBucket.Arn}/*\'
                  - !Sub \'${ExportBucket.Arn}\'

  #===========================EventBridge Rule========================================================
  PersistedResourcesEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Trigger on create and delete events for S3 bucket persisted-resources"
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        detail:
          bucket:
            name:
              - !Ref ResourcesBucket
          object:
            key:
              - prefix: !Ref ResourcesPrefix
              - prefix: !Ref NviCandidatesPrefix
      State: ENABLED
      Targets:
        - Arn: !GetAtt TransformPersistedResourceQueue.Arn
          Id: "TransformPersistedResourceQueue"
          InputTransformer:
            InputPathsMap:
              bucketName: "$.detail.bucket.name"
              key: "$.detail.object.key"
              eventType: "$.detail.reason"
            InputTemplate: '{"bucketName": <bucketName>, "key": <key>, "eventType": <eventType>}'
          DeadLetterConfig:
            Arn: !GetAtt DataReportPersistedResourceDLQ.Arn
          RetryPolicy:
            MaximumRetryAttempts: 3

  # ---- Handler ----

  PersistedResourceCsvTransformer:
    Type: AWS::Serverless::Function
    Properties:
      Handler: no.sikt.nva.data.report.api.etl.PersistedResourceCsvTransformer::handleRequest
      CodeUri: data-loading
      Policies:
        - !GetAtt S3ManagedPolicy.PolicyArn
      Timeout: 30
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          BACKEND_CLIENT_AUTH_URL: !Ref CognitoAuthorizationUri
          BACKEND_CLIENT_SECRET_NAME: 'BackendCognitoClientCredentials'
          EXPANDED_RESOURCES_BUCKET: !Ref ResourcesBucket
          EXPORT_BUCKET: !Ref ExportBucket
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TransformPersistedResourceQueue.Arn
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt TransformPersistedResourceDLQ.Arn


  ResetDatabaseButton:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: database-tools
      Handler: no.sikt.nva.data.report.dbtools.DatabaseResetHandler::handleRequest
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live

  #---- Generates key batches in bucket ----

  GenerateKeyBatchesHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bulk-load
      Handler: no.sikt.nva.data.report.api.etl.transformer.GenerateKeyBatchesHandler::handleRequest
      Policies:
        - !GetAtt S3ManagedPolicy.PolicyArn
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Environment:
        Variables:
          EVENT_BUS: !GetAtt BatchLoadEventBus.Name
          EXPANDED_RESOURCES_BUCKET: !Ref ResourcesBucket
          KEY_BATCHES_BUCKET: !Ref KeyBatchesBucket
          TOPIC: 'ReportApi.Bulk.KeyBasedBatch'
      Events:
        BatchIndexEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: !GetAtt BatchLoadEventBus.Name
            Pattern:
              detail:
                topic: [ 'ReportApi.Bulk.KeyBasedBatch' ]

  NquadsBulkTransformerHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bulk-load
      Handler: no.sikt.nva.data.report.api.etl.transformer.NquadsTransformer::handleRequest
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Policies:
        - !GetAtt S3ManagedPolicy.PolicyArn
        - !GetAtt DeleteS3ObjectPolicy.PolicyArn
      Environment:
        Variables:
          EVENT_BUS: !GetAtt BatchLoadEventBus.Name
          EXPANDED_RESOURCES_BUCKET: !Ref ResourcesBucket
          KEY_BATCHES_BUCKET: !Ref KeyBatchesBucket
          LOADER_BUCKET: !Ref LoaderBucket
          TOPIC: 'ReportApi.Bulk.TransformKeyBatchNquads'
          API_HOST: !Ref ApiDomain
      Events:
        BatchIndexEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: !GetAtt BatchLoadEventBus.Name
            Pattern:
              detail:
                topic: [ 'ReportApi.Bulk.TransformKeyBatchNquads' ]

  CsvBulkTransformerHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bulk-export
      Handler: no.sikt.nva.data.report.api.export.CsvTransformer::handleRequest
      Timeout: 600
      MemorySize: 1536
      AutoPublishAlias: live
      Policies:
        - !GetAtt S3ManagedPolicy.PolicyArn
      Environment:
        Variables:
          EVENT_BUS: !GetAtt BatchLoadEventBus.Name
          EXPANDED_RESOURCES_BUCKET: !Ref ResourcesBucket
          KEY_BATCHES_BUCKET: !Ref KeyBatchesBucket
          EXPORT_BUCKET: !Ref ExportBucket
          TOPIC: 'ReportApi.Bulk.TransformKeyBatchCsv'
      Events:
        BatchIndexEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: !GetAtt BatchLoadEventBus.Name
            Pattern:
              detail:
                topic: [ 'ReportApi.Bulk.TransformKeyBatchCsv' ]

  #---- EventBus ----

  BatchLoadEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !If
        - WithSuffix
        - !Join [ "-",[ "BatchLoadEventBus", !Ref Suffix ] ]
        - "BatchLoadEventBus"

  #---- Buckets ----
  LoaderBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub "${LoaderBucketName}-${AWS::AccountId}"
      LifecycleConfiguration:
        Rules:
          - Id: DeleteContentAfter3Days
            Status: Enabled
            ExpirationInDays: 3

  KeyBatchesBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub "${KeyBatchesBucketName}-${AWS::AccountId}"
      LifecycleConfiguration:
        Rules:
          - Id: DeleteContentAfter3Days
            Status: Enabled
            ExpirationInDays: 3

  ExportBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub "${ExportBucketName}-${AWS::AccountId}"


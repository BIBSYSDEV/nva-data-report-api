PREFIX : <https://nva.sikt.no/ontology/publication#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>


SELECT DISTINCT
  ?ARSTALL
  ?VARBEIDLOPENR
  ?ARSTALL_REG
  ?STATUS_KONTROLLERT
  ?PUBLIKASJONSFORM
  ?PUBLISERINGSKANALTYPE
  ?ISSN
  ?KVALITETSNIVAKODE
  ?PERSONLOPENR
  ?INSTITUSJONSNR
  ?AVDNR
  ?UNDAVDNR
  ?GRUPPENR
  ?FORFATTERE_TOTALT
  ?FORFATTERE_INT
  ?VEKTET
  ?ETTERNAVN
  ?FORNAVN
  ?PUBLISERINGSKANALNAVN
  ?SIDE_FRA
  ?SIDE_TIL
  ?SIDEANTALL
  ?VA_TITTEL
  ?SPRAK
  ?RAPPORTSTATUS
  ?VEKTINGSTALL
  ?FAKTORTALL_SAMARBEID
  ?FORFATTERDEL
  ?FORFATTERVEKT
  WHERE {
   GRAPH ?nvi {
       ?candidate a :NviCandidate ;
               :publicationDetails ?publicationUri ;
               :isApplicable ?isApplicable ;
               :internationalCollaborationFactor ?internationalCollaborationFactor ;
               :globalApprovalStatus ?globalApprovalStatus ;
               :publicationTypeChannelLevelPoints ?publicationTypeChannelLevelPoints ;
               :reportingPeriod ?reportingPeriod .

       ?reportingPeriod a :ReportingPeriod ;
                        :year ?reportingYear .
       BIND(STR(?reportingYear) AS ?ARSTALL)

       BIND(STR(?internationalCollaborationFactor) AS ?FAKTORTALL_SAMARBEID) .
       BIND(STR(?publicationTypeChannelLevelPoints) AS ?VEKTINGSTALL) .

       BIND(
           IF(?globalApprovalStatus = "Pending", "?",
           IF(?globalApprovalStatus = "Approved", "J",
           IF(?globalApprovalStatus = "Dispute", "T",
           IF(?globalApprovalStatus = "Rejected", "N",
           xsd:string(?globalApprovalStatus))))) AS ?RAPPORTSTATUS
       )

       BIND(REPLACE(STR(?publicationUri), "^.*/([^/]*)$", "$1") AS ?VARBEIDLOPENR)

       FILTER (?isApplicable = true)
       ?publicationUri :contributor ?contributorId .
             ?contributorId a :NviContributor .
       BIND(REPLACE(STR(?contributorId), "^.*/([^/]*)$", "$1") AS ?PERSONLOPENR)

       ?contributorId :affiliation ?affiliationUri .
             ?affiliationUri a ?NviOrganization .

       ?candidate :approval ?approval .
             ?approval a :Approval ;
               :approvalStatus ?approvalStatus ;
               :points ?institutionPoints ;
               :institutionId ?organizationUri .

       BIND(
          IF(?approvalStatus = "Pending", "?",
          IF(?approvalStatus = "Approved", "J",
          IF(?approvalStatus = "Rejected", "N", xsd:string(?approvalStatus)))) AS ?STATUS_KONTROLLERT
       )

       FILTER (?affiliationUri = ?organizationUri || EXISTS { ?affiliationUri :partOf ?organizationUri . })
       FILTER (STR(?organizationUri) = "__REPLACE_WITH_TOP_LEVEL_ORGANIZATION__")
       BIND(REPLACE(STR(?affiliationUri), "^.*/([^/]*)$", "$1") AS ?identifier)
       BIND(STRAFTER(str(?identifier), ".") AS ?temp1)
       BIND(STRAFTER(str(?temp1), ".") AS ?temp2)
       BIND(STRAFTER(str(?temp2), ".") AS ?GRUPPENR)
       BIND(STRBEFORE(str(?identifier), ".") AS ?INSTITUSJONSNR)
       BIND(STRBEFORE(str(?temp1), ".") AS ?AVDNR)
       BIND(STRBEFORE(str(?temp2), ".") AS ?UNDAVDNR)

       #These are todos
       BIND("FORFATTERE_TOTALT" AS ?FORFATTERE_TOTALT)
       BIND("FORFATTERE_INT" AS ?FORFATTERE_INT)
       BIND("SIDE_FRA" AS ?SIDE_FRA)
       BIND("SIDE_TIL" AS ?SIDE_TIL)
       BIND("SIDEANTALL" AS ?SIDEANTALL)
       BIND("SPRAK" AS ?SPRAK)
       BIND("FORFATTERDEL" AS ?FORFATTERDEL)
       BIND("FORFATTERVEKT" AS ?VEKTET)

       {
         SELECT ?publicationUri ?organizationUri (COUNT(DISTINCT ?contributorId) AS ?numberOfAffiliationsForInstitution){
           ?candidate a :NviCandidate ;
                   :publicationDetails ?publicationUri ;
                   :approval ?approval .

           ?publicationUri :contributor ?contributorId .
                 ?contributorId a :NviContributor .

           ?contributorId :affiliation ?affiliationUri .
           ?affiliationUri a ?NviOrganization .

           ?approval a :Approval ;
             :institutionId ?organizationUri .

           FILTER (?affiliationUri = ?organizationUri || EXISTS { ?affiliationUri :partOf ?organizationUri . })
         }
         GROUP BY ?publicationUri ?organizationUri
       }
       BIND(STR(ROUND((xsd:decimal(?institutionPoints)*10000)/?numberOfAffiliationsForInstitution)/10000) AS ?FORFATTERVEKT)

       ?reportingPeriod a :ReportingPeriod ;
                        :year ?reportingYear .
        FILTER (STR(?reportingYear) = "__REPLACE_WITH_REPORTING_YEAR__")
     }
     GRAPH ?nva {
        ?publicationUri a :Publication ;
             :identifier ?publicationIdentifier ;
             :entityDescription ?entityDescription ;
             :entityDescription/:contributor ?contributor .

        ?entityDescription :publicationDate ?publicationDate .
        ?entityDescription :mainTitle ?VA_TITTEL .
        ?entityDescription :reference ?reference .
        ?reference :publicationContext ?publicationContext .
        ?publicationContext a ?channelTypeId ;
                            :name ?PUBLISERINGSKANALNAVN ;
                            :scientificValue ?scientificValue .

        ?publicationDate :year ?publicationYear .
        BIND(STR(?publicationYear) AS ?ARSTALL_REG)

        BIND(
          IF(?scientificValue = "LevelOne", "1",
          IF(?scientificValue = "LevelTwo", "2", xsd:string(?scientificValue))) AS ?KVALITETSNIVAKODE
        )

        BIND(REPLACE(STR(?publicationContext), "^.*/([^/]+)/[^/]+$", "$1") AS ?channelIdentifier)
        BIND(STR(?channelTypeId) AS ?channelType)
        BIND(REPLACE(STR(?channelType), "https://nva.sikt.no/ontology/publication#", "", "i") AS ?PUBLISERINGSKANALTYPE)
        ?reference :publicationInstance ?instance .
        ?instance a ?instanceType .
        BIND(REPLACE(STR(?instanceType), "https://nva.sikt.no/ontology/publication#", "", "i") AS ?PUBLIKASJONSFORM)

        OPTIONAL {
            ?publicationContext :printIssn ?ISSN
        }

        ?contributor :identity ?contributorId .
        ?contributorId :name ?contributorName .
        BIND(?contributorName AS ?ETTERNAVN)
        BIND(?contributorName AS ?FORNAVN)
     }
    } LIMIT 10000 #TODO: Handle cases where the limit is reached


